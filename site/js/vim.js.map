{"version":3,"sources":["webpack:///webpack/bootstrap ac8bb820584ee2b8afcc","webpack:///./src/index.js","webpack:///./src/util/helper.js","webpack:///./src/instance/router/router.js","webpack:///./src/instance/vim/vim.js","webpack:///./src/instance/vim/init.js","webpack:///./src/instance/text/text.js","webpack:///./src/instance/controller.js","webpack:///./src/instance/app/app.js","webpack:///./src/config.js","webpack:///./src/routes.js","webpack:///./src/bind.js","webpack:///./src/filter.js","webpack:///./src/instance/app/init.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,G;;;;;;AClEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACtBA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACbiBAAgB,KAAK;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpWA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA,kC;;;;;;AC5BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAkD;AAClD,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;;;;;;ACnOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjNA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;;AAEA;AACA;AACA,WAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA","file":"vim.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ac8bb820584ee2b8afcc\n **/","var _ = require('./util/helper.js');\nvar extend = _.extend;\nvar p;\n\n/**\n * Router constructor\n * @constructor\n */\nfunction Router () {\n    this._init();\n}\np = Router.prototype;\nextend(p, require('./instance/router/router.js'));\n\n/**\n * Vim constructor\n * @constructor\n */\nfunction Vim(textUtil) {\n    this._init(textUtil);\n}\np = Vim.prototype;\nextend(p, require('./instance/vim/vim.js'));\n\n/**\n * textUtil constructor\n * @constructor\n */\nfunction TextUtil(element) {\n    this._init(element);\n}\np = TextUtil.prototype;\nextend(p, require('./instance/text/text.js'));\n\n/**\n *\n * @constructor\n */\nfunction Controller(app) {\n    this._init(app);\n}\np = Controller.prototype;\nextend(p, require('./instance/controller.js'));\n\n/**\n * App constructor\n * @constructor\n */\nfunction App (options) {\n    this._init(options)\n}\np = App.prototype;\nextend(p, require('./instance/app/app.js'));\np.class('Router', Router);\np.class('Vim', Vim);\np.class('TextUtil', TextUtil);\np.class('Controller', Controller);\n\n/**\n * define vim\n * @type {{open: Function}}\n */\nwindow.vim = {\n    open: function(options){\n        return new App(options)\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/**\n * Created by top on 15-9-6.\n */\n\nexports.extend = function(to, form){\n    for (var key in form) {\n        to[key] = form[key]\n    }\n    return to\n}\n\nexports.indexOf = function (array, key) {\n    for (var k in array) {\n        if (array[k] == key) {\n            return k;\n        }\n    }\n    return -1;\n}\n\nexports.currentTime = function () {\n    return new Date().getTime();\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/helper.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Created by top on 15-9-6.\n */\n\nexports._init = function() {\n    this.currentCode = undefined;\n    this._keys = {};\n}\n\nexports.code = function (code, name) {\n    if (!this._keys[code]) {\n        this._keys[code] = {}\n    }\n    this._keys[code]['name'] = name;\n    this._keys[code]['mode'] = '';\n    this._keys[code]['record'] = false;\n    this.currentCode = code;\n    return this;\n}\n\nexports.action = function (name, methodName) {\n    if (!this.currentCode) {\n        return\n    }\n    this._keys[this.currentCode][name] = methodName;\n    return this;\n}\n\nexports.mode = function(mode) {\n    if (!this.currentCode) {\n        return\n    }\n    this._keys[this.currentCode]['mode'] = mode;\n    return this;\n}\n\nexports.record = function(isRecord) {\n    if (!this.currentCode) {\n        return\n    }\n    this._keys[this.currentCode]['record'] = isRecord;\n    return this;\n}\n\nexports.getKeys = function() {\n    return this._keys;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/instance/router/router.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * Created by top on 15-9-6.\n */\nconst GENERAL = 'general_mode';\nconst COMMAND = 'command_mode';\nconst EDIT    = 'edit_mode';\nconst VISUAL  = 'visual_mode';\nconst _ENTER_ = '\\n';\n\nvar _ = require('../../util/helper.js');\nvar extend = _.extend;\nvar textUtil;\n\nexports._init = function (tu) {\n    extend(this, require('./init.js'));\n    textUtil = tu;\n};\n\nexports.resetVim = function() {\n    this.replaceRequest = false;\n    this.visualPosition = undefined;\n    this.visualCursor = undefined;\n}\n\nexports.setTextUtil = function(tu) {\n    textUtil = tu;\n}\n\nexports.isMode = function (modeName) {\n    return this.currentMode === modeName\n};\n\nexports.switchModeTo = function (modeName) {\n    if (modeName === GENERAL || modeName === COMMAND || modeName === EDIT || modeName === VISUAL) {\n        this.currentMode = modeName;\n    }\n};\n\nexports.resetCursorByMouse = function() {\n    this.switchModeTo(GENERAL);\n    var p = textUtil.getCursorPosition();\n    var sp = textUtil.getCurrLineStartPos();\n    var c = textUtil.getCurrLineCount();\n    if (p === sp && !c) {\n        textUtil.appendText(' ', p);\n    }\n    var ns = textUtil.getNextSymbol(p-1);\n    if (ns && ns !== _ENTER_) {\n        textUtil.select(p, p+1);\n    } else {\n        textUtil.select(p-1, p);\n    }\n};\n\nexports.selectNextCharacter = function() {\n    var p = textUtil.getCursorPosition();\n    if (this.isMode(VISUAL) && this.visualCursor !== undefined) {\n        p = this.visualCursor;\n    }\n    if (this.isMode(GENERAL) && textUtil.getNextSymbol(p) == _ENTER_) {\n        return;\n    }\n    if (this.isMode(VISUAL) && textUtil.getNextSymbol(p-1) == _ENTER_) {\n        return;\n    }\n    if (p+1 <= textUtil.getText().length) {\n        var s = p+1;\n        if (this.isMode(VISUAL)) {\n            s = this.visualPosition;\n            this.visualCursor = p+1;\n            var f1 = this.visualCursor;\n            var f2 = this.visualPosition;\n            var f3 = textUtil.getCursorPosition();\n        }\n        //default\n        textUtil.select(s, p+2);\n        //special\n        if (this.isMode(VISUAL)) {\n            if (s == p) {\n                textUtil.select(s, p+2);\n                this.visualCursor = p+2;\n            } else {\n                textUtil.select(s, p+1);\n            }\n            if (f2 > f1 && f2 > f3) {\n                textUtil.select(s, p+1);\n            } else if (f1 == f2 && f2 - f3 == 1) {\n                //textUtil.select(s, p+1);\n                this.visualPosition = f2-1;\n                this.visualCursor = p+2;\n                textUtil.select(s-1, p+2);\n            }\n        }\n    }\n};\n\nexports.selectPrevCharacter = function() {\n    var p = textUtil.getCursorPosition();\n    if (this.isMode(VISUAL) && this.visualCursor !== undefined) {\n        p = this.visualCursor;\n    }\n    if (textUtil.getPrevSymbol(p) == _ENTER_) {\n        return;\n    }\n    var s = p-1;\n    if (this.isMode(VISUAL)) {\n        s = this.visualPosition;\n        if (s < p && textUtil.getPrevSymbol(p-1) == _ENTER_) {\n            return;\n        }\n        if (s == p) {\n            p = p+1;\n            s = s-1;\n            this.visualPosition = p;\n            this.visualCursor = s;\n        } else if (p == s+1) {\n            s = s+1;\n            p = p-2;\n            this.visualPosition = s;\n            this.visualCursor = p;\n        } else if (p == s-1) {\n            p = s-2;\n            this.visualCursor = p;\n        } else {\n            //default\n            if (!(s < p && (p+1 == textUtil.getSelectEndPos()))) {\n                p = p-1;\n            }\n            this.visualCursor = p;\n        }\n    }\n    if (this.visualCursor < 0) {\n        this.visualCursor = 0;\n    }\n    if ((this.isMode(GENERAL) && s>=0) || this.isMode(VISUAL)) {\n        textUtil.select(s, p);\n    }\n};\n\nexports.append = function () {\n    var p = textUtil.getCursorPosition();\n    textUtil.select(p+1, p+1);\n};\n\nexports.insert = function () {\n    var p = textUtil.getCursorPosition();\n    textUtil.select(p, p);\n};\n\nexports.selectNextLine = function () {\n    var sp = undefined;\n    if (this.isMode(VISUAL) && this.visualCursor !== undefined) {\n        sp = this.visualCursor;\n    }\n    var nl = textUtil.getNextLineStart(sp);\n    var nr = textUtil.getNextLineEnd(sp);\n    var nc = nr - nl;\n    var cc = textUtil.getCountFromStartToPosInCurrLine(sp);\n    if (this.isMode(VISUAL) && this.visualCursor != undefined && this.visualPosition < this.visualCursor) {\n        cc = cc-1;\n    }\n    var p = nl + (cc > nc ? nc : cc);\n    if (p <= textUtil.getText().length) {\n        var s = p-1;\n        if (this.isMode(VISUAL)) {\n            s = this.visualPosition;\n            if (s > p) {\n                p = p-1;\n            }\n            this.visualCursor = p;\n            if (textUtil.getSymbol(nl) == _ENTER_) {\n                textUtil.appendText(' ', nl);\n                p = p+1;\n                this.visualCursor = p;\n                if (s > p) {\n                    //因为新加了空格符，导致字符总数增加，visual开始位置相应增加\n                    s += 1;\n                    this.visualPosition = s;\n                }\n            }\n        }\n        textUtil.select(s, p);\n        if (this.isMode(GENERAL)) {\n            if (textUtil.getSymbol(nl) == _ENTER_) {\n                textUtil.appendText(' ', nl);\n            }\n        }\n    }\n};\n\nexports.selectPrevLine = function () {\n    var sp = undefined;\n    if (this.isMode(VISUAL) && this.visualCursor !== undefined) {\n        sp = this.visualCursor;\n    }\n    var pl = textUtil.getPrevLineStart(sp);\n    var pr = textUtil.getPrevLineEnd(sp);\n    var cc = textUtil.getCountFromStartToPosInCurrLine(sp);\n    if (this.isMode(VISUAL) && this.visualCursor != undefined && this.visualPosition < this.visualCursor) {\n        cc = cc-1;\n    }\n    var pc = pr - pl;\n    var p = pl + (cc > pc ? pc : cc);\n    if (p >= 0) {\n        var s = p-1;\n        var e = p;\n        if (this.isMode(VISUAL)) {\n            s = this.visualPosition;\n            if (textUtil.getPrevSymbol(p) != _ENTER_ && s != p-1 && e < s) {\n                e = p-1;\n            }\n            this.visualCursor = e;\n        }\n        textUtil.select(s, e);\n        if (this.isMode(GENERAL)) {\n            if (textUtil.getSymbol(pl) == _ENTER_) {\n                textUtil.appendText(' ', pl);\n            }\n        }\n    }\n};\n\nexports.moveToCurrentLineHead = function () {\n    var p = textUtil.getCurrLineStartPos();\n    if (this.isMode(GENERAL)) {\n        textUtil.select(p, p+1);\n    }\n    if (this.isMode(VISUAL)) {\n        var sp = this.visualCursor;\n        if (sp === undefined) {\n            sp = textUtil.getCursorPosition();\n        }\n        for (sp;sp>p;sp--) {\n            this.selectPrevCharacter();\n        }\n    }\n};\n\nexports.moveToCurrentLineTail = function () {\n    var p = textUtil.getCurrLineEndPos();\n    if (this.isMode(GENERAL)) {\n        textUtil.select(p - 1, p);\n    }\n    if (this.isMode(VISUAL)) {\n        var sp = this.visualCursor;\n        if (sp === undefined) {\n            sp = textUtil.getCursorPosition();\n        }\n        p = textUtil.getCurrLineEndPos(sp);\n        if (sp == p-1) {\n            p = p-1\n        }\n        for (sp;sp<p;sp++){\n            this.selectNextCharacter();\n        }\n    }\n};\n\nexports.appendNewLine = function () {\n    var p = textUtil.getCurrLineEndPos();\n    textUtil.appendText(_ENTER_ + \" \", p);\n    textUtil.select(p+1, p+1);\n};\n\nexports.insertNewLine = function () {\n    var p = textUtil.getCurrLineStartPos();\n    textUtil.appendText(\" \" + _ENTER_, p);\n    textUtil.select(p, p);\n};\n\nexports.deleteSelected = function () {\n    var p = textUtil.getCursorPosition();\n    var t = textUtil.delSelected();\n    textUtil.select(p, p+1);\n    this.pasteInNewLineRequest = false;\n    return t;\n};\n\nexports.copyCurrentLine = function (p) {\n    var sp = textUtil.getCurrLineStartPos(p);\n    var ep = textUtil.getCurrLineEndPos(p);\n    //clipboard = textUtil.getText(sp, ep);\n    this.pasteInNewLineRequest= true;\n    return textUtil.getText(sp, ep+1);\n};\n\nexports.backToHistory = function (list) {\n    if (list) {\n        var data = list.pop();\n        if (data !== undefined) {\n            textUtil.setText(data.t);\n            textUtil.select(data.p, data.p+1);\n        }\n    }\n};\n\nexports.delCurrLine = function () {\n    var sp = textUtil.getCurrLineStartPos();\n    var ep = textUtil.getCurrLineEndPos();\n    var t = textUtil.delete(sp, ep+1);\n    textUtil.select(sp, sp+1);\n    this.pasteInNewLineRequest = true;\n    return t;\n};\n\nexports.moveToFirstLine = function () {\n    if (this.isMode(GENERAL)) {\n        textUtil.select(0,1);\n    } else if (this.isMode(VISUAL)) {\n        textUtil.select(this.visualPosition, 0);\n        this.visualCursor = 0;\n    }\n};\n\nexports.moveToLastLine = function () {\n    var lp = textUtil.getText().length;\n    var sp = textUtil.getCurrLineStartPos(lp-1);\n    if (this.isMode(GENERAL)) {\n        textUtil.select(sp, sp+1);\n    } else if (this.isMode(VISUAL)) {\n        textUtil.select(this.visualPosition, sp+1);\n        this.visualCursor = sp+1;\n    }\n};\n\nexports.moveToNextWord = function () {\n    var p;\n    if (this.isMode(VISUAL)) {\n        p = this.visualCursor;\n    }\n    var poses = textUtil.getCurrWordPos(p);\n    //poses[1] is next word`s start position\n    var sp = poses[1];\n    if (sp) {\n        if (this.isMode(GENERAL)) {\n            textUtil.select(sp, sp+1);\n        } else if (this.isMode(VISUAL)) {\n            textUtil.select(this.visualPosition, sp+1);\n            this.visualCursor = sp+1;\n        }\n    }\n};\n\nexports.copyWord = function (p) {\n    var poses = textUtil.getCurrWordPos(p);\n    return poses[1];\n};\n\nexports.deleteWord = function () {\n    var t;\n    var poses = textUtil.getCurrWordPos();\n    if (poses[1]) {\n        t = textUtil.delete(poses[0], poses[1]);\n        textUtil.select(poses[0], poses[0]+1)\n    }\n    return t;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/instance/vim/vim.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * default mode\n * @type {string}\n */\nexports.currentMode = 'edit_mode';\n\n/**\n * whether the request to replace a character\n * @type {boolean}\n */\nexports.replaceRequest = false;\n\n/**\n * whether the request to paste characters in new line\n * @type {boolean}\n */\nexports.pasteInNewLineRequest = false;\n\n/**\n * the starting position of selected text (visual mode)\n * @type {undefined}\n */\nexports.visualPosition = undefined;\n\n/**\n * the end position of selected text (visual mode)\n * @type {undefined}\n */\nexports.visualCursor = undefined;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/instance/vim/init.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Created by top on 15-9-6.\n */\nconst _ENTER_ = '\\n';\nvar el;\n\nexports._init = function (element) {\n    el = element;\n}\n\nexports.setEle = function(e){\n    el = e;\n}\n\nexports.getText = function(sp, ep) {\n    if (sp !== undefined || ep !== undefined) {\n        return el.value.slice(sp, ep);\n    }\n    return el.value;\n};\n\nexports.setText = function (t) {\n    el.value = t;\n};\n\nexports.getSelectedText = function() {\n    //var t = document.getSelection() || document.selection.createRange().text;\n    var t;\n    if(document.selection){\n        t = document.selection.createRange().text;// for IE\n    } else {\n        t = el.value.substring(el.selectionStart, el.selectionEnd);\n    }\n    return t + '';\n};\n\nexports.getCursorPosition = function () {\n    if (document.selection) {\n        el.focus();\n        var ds = document.selection;\n        var range = ds.createRange();\n        var stored_range = range.duplicate();\n        stored_range.moveToElementText(el);\n        stored_range.setEndPoint(\"EndToEnd\", range);\n        el.selectionStart = stored_range.text.length - range.text.length;\n        el.selectionEnd = el.selectionStart + range.text.length;\n        return el.selectionStart;\n    } else {\n        return el.selectionStart\n    }\n};\n\nexports.getSelectEndPos = function () {\n    if (document.selection) {\n        el.focus();\n        var ds = document.selection;\n        var range = ds.createRange();\n        var stored_range = range.duplicate();\n        stored_range.moveToElementText(el);\n        stored_range.setEndPoint(\"EndToEnd\", range);\n        el.selectionStart = stored_range.text.length - range.text.length;\n        el.selectionEnd = el.selectionStart + range.text.length;\n        return el.selectionEnd;\n    } else {\n        return el.selectionEnd;\n    }\n};\n\nexports.select = function (start, end) {\n    if (start > end) {\n        var p = start;\n        start = end;\n        end = p;\n    }\n    if (start < 0) {\n        start = 0;\n    }\n    if (end > this.getText().length) {\n        end = this.getText().length;\n    }\n    if(document.selection){\n        var range = el.createTextRange();\n        range.moveEnd('character', -el.value.length);\n        range.moveEnd('character', end);\n        range.moveStart('character', start);\n        range.select();\n    }else{\n        el.setSelectionRange(start, end);\n        el.focus();\n    }\n};\n\nexports.appendText = function (t, p, paste, isNewLine) {\n    var ot = this.getText();\n    if (p === undefined) {\n        p = this.getCursorPosition() + 1;\n    }\n    var nt = ot.slice(0, p) + t + ot.slice(p, ot.length);\n    this.setText(nt);\n    if (paste) {\n        if (isNewLine && p) {\n            this.select(p+1, p+2);\n        } else {\n            this.select(p+t.length, p+t.length-1);\n        }\n    } else {\n        this.select(p, p + t.length);\n    }\n};\n\nexports.insertText = function (t, p, paste, isNewLine) {\n    var ot = this.getText();\n    if (p === undefined) {\n        p = this.getCursorPosition();\n    }\n    var nt = ot.slice(0, p) + t + ot.slice(p, ot.length);\n    this.setText(nt);\n    if (paste) {\n        if (isNewLine) {\n            this.select(p, p+1);\n        } else {\n            this.select(p+t.length, p+t.length-1);\n        }\n    } else {\n        this.select(p, p + t.length);\n    }\n};\n\nexports.delete = function (sp, ep) {\n    if (sp > ep) {\n        var p = ep;\n        sp = ep;\n        ep = p;\n    }\n    if (ep - sp > 0) {\n        var t = this.getText();\n        var nt = t.slice(0, sp) + t.slice(ep);\n        if (!nt) {\n            nt = ' ';\n        }\n        this.setText(nt);\n        return t.slice(sp, ep);\n    }\n    return undefined;\n};\n\nexports.delSelected = function () {\n    var sp = this.getCursorPosition();\n    var ep = this.getSelectEndPos();\n    return this.delete(sp, ep);\n};\n\nexports.getCountFromStartToPosInCurrLine = function(p) {\n    if (p === undefined) {\n        p = this.getCursorPosition();\n    }\n    var s = this.getCurrLineStartPos(p);\n    return (p - s) + 1;\n};\n\nexports.getCurrLineStartPos = function (p) {\n    if (p === undefined) {\n        p = this.getCursorPosition();\n    }\n    var sp = this.findSymbolBefore(p, _ENTER_);\n    return sp || 0;\n};\n\nexports.getCurrLineEndPos = function (p) {\n    if (p === undefined) {\n        p = this.getCursorPosition();\n    }\n    if (this.getSymbol(p) == _ENTER_) {\n        return p;\n    }\n    var end = this.findSymbolAfter(p, _ENTER_);\n    return end || this.getText().length;\n};\n\nexports.getCurrLineCount = function (p) {\n    if (p === undefined) {\n        p = this.getCursorPosition();\n    }\n    var left = this.findSymbolBefore(p, _ENTER_);\n    var right = this.findSymbolAfter(p, _ENTER_);\n    if (left === undefined) {\n        return right;\n    }\n    return right - left;\n};\n\nexports.getNextLineStart = function (p) {\n    var sp = this.getCurrLineStartPos(p);\n    var cc = this.getCurrLineCount(p);\n    return sp + cc + 1;\n};\n\nexports.getNextLineEnd = function (p) {\n    var start = this.getNextLineStart(p);\n    if (start !== undefined) {\n        var end = this.findSymbolAfter(start, _ENTER_);\n        return end || this.getText().length;\n    }\n    return undefined;\n};\n\nexports.getPrevLineEnd = function (pos) {\n    var p = this.getCurrLineStartPos(pos);\n    if (p > 0) {\n        return p - 1;\n    }\n    return undefined;\n};\n\nexports.getPrevLineStart = function (pos) {\n   var p = this.getPrevLineEnd(pos);\n   if (p !== undefined) {\n       var sp = this.findSymbolBefore(p, _ENTER_);\n       return sp || 0;\n   }\n   return undefined;\n};\n\nexports.findSymbolBefore = function (p, char) {\n    var text = this.getText();\n    for (var i = (p-1); i>=0; i--) {\n        if (text.charAt(i) == char) {\n            return i+1;\n        }\n    }\n    return 0;\n};\n\nexports.findSymbolAfter = function (p, char, char2) {\n    var text = this.getText();\n    var pattern = new RegExp(char);\n    //And conditions\n    var andPattern = char2 ? new RegExp(char2) : false;\n    for (var i = p; i<text.length; i++) {\n        if (pattern.test(text.charAt(i))) {\n            if (!andPattern) {\n                return i;\n            } else if (andPattern.test(text.charAt(i))) {\n                return i;\n            }\n        }\n    }\n    return this.getText().length;\n};\n\nexports.getSymbol = function (p) {\n    var text = this.getText();\n    return text.charAt(p) || undefined;\n};\n\nexports.getNextSymbol = function (p) {\n    return this.getSymbol(p+1);\n};\n\nexports.getPrevSymbol = function (p) {\n    return this.getSymbol(p-1);\n};\n\nexports.getCurrWordPos = function (p) {\n    p = p || this.getCursorPosition();\n    //current character\n    var char = this.getSymbol(p);\n\n    //parse current character type\n    //\n    var patternStr;\n    if (/[\\w\\u4e00-\\u9fa5]/.test(char) && /[^\\|]/.test(char)) {\n        //this char is a general character(such as a-z,0-9,_, etc),\n        //and should find symbol character(such as *&^%$|{(, etc).\n        //\n        //pattern string for find symbol char:\n        patternStr = \"[^\\\\w\\u4e00-\\u9fa5]\";\n    } else if (/\\W/.test(char) && /\\S/.test(char)) {\n        //this char is a symbol character(such as *&^%$, etc),\n        //and should find general character(such as a-z,0-9,_, etc).\n        //\n        //pattern string for find general char:\n        patternStr = \"[\\\\w\\u4e00-\\u9fa5]\";\n    }\n\n    //parse and get current word`s last character`s right position,\n    //and in other word, get the next word`s first character`s left position\n    //\n    var lastCharPos;\n    if (patternStr) {\n        //get first invisible character position\n        var firstInvisible = this.findSymbolAfter(p, '\\\\s');\n        //get first visible character which after first invisible space\n        var firstVisible = this.findSymbolAfter(firstInvisible, '\\\\S');\n        //get position\n        lastCharPos = this.findSymbolAfter(p, patternStr, '\\\\S');\n        lastCharPos = lastCharPos - p < firstInvisible - p ? lastCharPos : firstVisible;\n    } else {\n        //get any visible symbol`s position\n        lastCharPos = this.findSymbolAfter(p, '\\\\S');\n    }\n\n    //return current word`s start position and end position\n    //\n    if (lastCharPos < this.getText().length) {\n        return [p, lastCharPos];\n    }\n    return [p, undefined];\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/instance/text/text.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Created by top on 15-9-6.\n */\nconst GENERAL = 'general_mode';\nconst COMMAND = 'command_mode';\nconst EDIT    = 'edit_mode';\nconst VISUAL  = 'visual_mode';\nconst _ENTER_ = '\\n';\n\nvar App;\nvar vim;\nvar textUtil;\n\nexports._init = function (app) {\n    App = app;\n    vim = app.vim;\n    textUtil = app.textUtil;\n}\n\nexports.setVim = function(v) {\n    vim = v;\n}\n\nexports.setTextUtil = function(tu) {\n    textUtil = tu;\n}\n\nexports.selectPrevCharacter = function (num) {\n    App.repeatAction(function(){\n        vim.selectPrevCharacter();\n    }, num);\n};\n\nexports.selectNextCharacter = function (num) {\n    App.repeatAction(function(){\n        vim.selectNextCharacter();\n    }, num);\n};\n\nexports.switchModeToGeneral = function () {\n    var cMode= vim.currentMode;\n    if (vim.isMode(GENERAL)) {\n        return;\n    }\n    vim.switchModeTo(GENERAL);\n    var p = textUtil.getCursorPosition();\n    var sp = textUtil.getCurrLineStartPos();\n    if (p === sp) {\n        var c = textUtil.getCurrLineCount();\n        if (!c) {\n            textUtil.appendText(' ', p);\n        }\n        vim.selectNextCharacter();\n        vim.selectPrevCharacter();\n        if (textUtil.getCurrLineCount() === 1) {\n            textUtil.select(p, p+1);\n        }\n    } else {\n        if (cMode === VISUAL) {\n            vim.selectNextCharacter();\n        }\n        vim.selectPrevCharacter();\n    }\n};\n\nexports.switchModeToVisual = function () {\n    if (vim.isMode(VISUAL)) {\n        var s = vim.visualCursor;\n        if (s === undefined) {\n            return;\n        }\n        var p = vim.visualPosition;\n        if (p < s) {\n            textUtil.select(s-1, s);\n        } else {\n            textUtil.select(s, s+1);\n        }\n        if (textUtil.getPrevSymbol(s) == _ENTER_) {\n            textUtil.select(s, s+1);\n        }\n        vim.switchModeTo(GENERAL);\n        return;\n    }\n    vim.switchModeTo(VISUAL);\n    vim.visualPosition = textUtil.getCursorPosition();\n    vim.visualCursor = undefined;\n};\n\nexports.append = function() {\n    vim.append();\n    setTimeout(function () {\n        vim.switchModeTo(EDIT);\n    }, 100);\n};\n\nexports.insert = function() {\n    vim.insert();\n    setTimeout(function () {\n        vim.switchModeTo(EDIT);\n    }, 100);\n};\n\nexports.selectNextLine = function (num) {\n    App.repeatAction(function(){\n        vim.selectNextLine();\n    }, num);\n};\n\nexports.selectPrevLine = function (num) {\n    App.repeatAction(function(){\n        vim.selectPrevLine();\n    }, num);\n};\n\nexports.copyChar = function() {\n    vim.pasteInNewLineRequest = false;\n    App.clipboard = textUtil.getSelectedText();\n    if (vim.isMode(VISUAL)) {\n        this.switchModeToGeneral();\n    }\n};\n\nexports.copyCurrentLine = function(num) {\n    var _data = {p:undefined, t:''};\n    App.repeatAction(function () {\n        _data.t = vim.copyCurrentLine(_data.p);\n        _data.p = textUtil.getNextLineStart(_data.p);\n        return _data.t;\n    }, num);\n};\n\nexports.pasteAfter = function () {\n    if (App.clipboard !== undefined) {\n        if(vim.pasteInNewLineRequest){\n            var ep = textUtil.getCurrLineEndPos();\n            textUtil.appendText(_ENTER_ + App.clipboard, ep, true, true);\n        } else {\n            textUtil.appendText(App.clipboard, undefined, true, false)\n        }\n    }\n};\n\nexports.pasteBefore = function () {\n    if (App.clipboard !== undefined) {\n        if(vim.pasteInNewLineRequest){\n            var sp = textUtil.getCurrLineStartPos();\n            textUtil.insertText(App.clipboard + _ENTER_, sp, true, true);\n        } else {\n            textUtil.insertText(App.clipboard, undefined, true, false)\n        }\n    }\n};\n\nexports.moveToCurrentLineHead = function () {\n    vim.moveToCurrentLineHead();\n};\n\nexports.moveToCurrentLineTail = function () {\n    vim.moveToCurrentLineTail();\n};\n\nexports.replaceChar = function () {\n    vim.replaceRequest = true;\n};\n\nexports.appendNewLine = function () {\n    vim.appendNewLine();\n    setTimeout(function () {\n        vim.switchModeTo(EDIT);\n    }, 100);\n};\n\nexports.insertNewLine = function () {\n    vim.insertNewLine();\n    setTimeout(function () {\n        vim.switchModeTo(EDIT);\n    }, 100);\n};\n\nexports.delCharAfter = function (num) {\n    App.repeatAction(function(){\n       return vim.deleteSelected();\n    }, num);\n    this.switchModeToGeneral()\n};\n\nexports.backToHistory = function () {\n    var key = App.getEleKey();\n    var list = App.doList[key];\n    vim.backToHistory(list);\n};\n\nexports.delCurrLine = function (num) {\n    App.repeatAction(function () {\n       return vim.delCurrLine();\n    }, num);\n};\n\nexports.moveToFirstLine = function () {\n    vim.moveToFirstLine();\n};\n\nexports.moveToLastLine = function () {\n    vim.moveToLastLine();\n};\n\nexports.moveToNextWord = function (num) {\n    App.repeatAction(function(){\n        vim.moveToNextWord();\n    }, num);\n};\n\nexports.copyWord = function (num) {\n    vim.pasteInNewLineRequest = false;\n    var sp = textUtil.getCursorPosition();\n    var ep;\n    App.repeatAction(function(){\n        ep = vim.copyWord(ep);\n    }, num);\n    App.clipboard = textUtil.getText(sp,ep);\n};\n\nexports.deleteWord = function (num) {\n    vim.pasteInNewLineRequest = false;\n    App.repeatAction(function () {\n       return vim.deleteWord();\n    }, num);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/instance/controller.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Created by top on 15-9-6.\n */\nconst GENERAL = 'general_mode';\nconst VISUAL  = 'visual_mode';\nconst _ENTER_ = '\\n';\n\nvar _ = require('../../util/helper.js');\nvar config = require('../../config.js');\nvar routes = require('../../routes.js');\nvar bind = require('../../bind.js');\nvar extend = _.extend;\n\nexports.classes = {}\n\nexports._init = function (options) {\n    extend(this, require('./init.js'));\n\n    this.config = extend(config, options);\n    this.key_code_white_list = config.key_code_white_list;\n\n    this.router = this.createClass('Router');\n    this.textUtil = this.createClass('TextUtil', this.currentEle);\n    this.vim = this.createClass('Vim', this.textUtil);\n    this.controller = this.createClass('Controller', this);\n\n    this._log(this);\n    this._start();\n}\n\nexports._start = function () {\n    this._route();\n    this._bind();\n}\n\nexports._route = function () {\n    routes.ready(this.router);\n}\n\nexports._bind = function() {\n    bind.listen(this);\n}\n\nexports._on = function (event, fn) {\n    if (!this._events) {\n        this._events = {}\n    }\n    if (typeof  fn === 'function') {\n        this._events[event] = fn;\n    }\n    return this;\n}\n\nexports._fire = function (event) {\n    if (!this._events || !this._events[event]) {\n        return;\n    }\n    var args = Array.prototype.slice.call(arguments, 1) || [];\n    var fn = this._events[event];\n    fn.apply(this, args);\n    return this;\n}\n\nexports._log = function(msg, debug) {\n    debug = debug ? debug : this.config.debug;\n    if (debug) {\n        console.log(msg)\n    }\n}\n\nexports.repeatAction = function(action, num) {\n    if (typeof action !== 'function') {\n        return;\n    }\n    var res = undefined;\n    if (num === undefined || isNaN(num)) {\n        num = 1;\n    }\n    for (var i=0;i<num;i++) {\n        res = action.apply();\n        if (res) {\n            if (!i) {\n                this.clipboard = '';\n            }\n            if (i == num-1) {\n                //remove line break char\n                res = res.replace(_ENTER_, '');\n            }\n            this.clipboard = this.clipboard + res;\n        }\n    }\n}\n\nexports.recordText = function(t, p) {\n    t = (t === undefined) ? this.textUtil.getText() : t;\n    p = (p === undefined) ? this.textUtil.getCursorPosition() : p;\n    var data = {\n        't':t,\n        'p':p\n    };\n    var key = this.getEleKey();\n    if (!this.doList[key]) {\n        this.doList[key] = [];\n    }\n    if (this.doList[key].length >= this.doListDeep) {\n        this.doList[key].shift();\n    }\n    this.doList[key].push(data);\n    this._log(this.doList);\n}\n\nexports.getEleKey = function() {\n    return _.indexOf(this.boxes, this.currentEle);\n}\n\nexports.numberManager = function(code) {\n    if (code == 68 || code == 89) {\n        //防止ndd和nyy时候数值计算错误,如当code为68时，\n        //如果不拦截，则会在后面执行initNumber()，导致dd时无法获取数值\n        return undefined;\n    }\n    var num = String.fromCharCode(code);\n    if (!isNaN(num) && num >=0 && num <=9) {\n        this._number = this._number + '' + num;\n        this._log('number:' + this._number);\n    } else {\n        var n = this._number;\n        this.initNumber();\n        if (n) {\n            return parseInt(n);\n        }\n    }\n    return undefined;\n}\n\nexports.initNumber = function() {\n    this._number = '';\n}\n\nexports.isUnionCode = function (code, maxTime) {\n    if (maxTime === undefined) {\n        maxTime = 600;\n    }\n    var ct = _.currentTime();\n    var pt = this.prevCodeTime;\n    var pc = this.prevCode;\n    this.prevCode = code;\n    this.prevCodeTime = ct;\n    if (pc && (maxTime < 0 || ct - pt <= maxTime)) {\n        if (pc == code) {\n            this.prevCode = undefined;\n        }\n        return pc + '_' + code;\n    }\n    return undefined;\n}\n\nexports.parseRoute = function(code, ev, num) {\n    var c = this.controller;\n    var param = num;\n    var prefix = 'c.';\n    var suffix = '(param)';\n    var vimKeys = this.router.getKeys();\n    if (code === 27) {\n        c.switchModeToGeneral();\n        return;\n    }\n    if (vimKeys[code] && (this.vim.isMode(GENERAL) || this.vim.isMode(VISUAL))) {\n        var mode = vimKeys[code]['mode'];\n        if (mode && !this.vim.isMode(mode)) {\n            return false;\n        }\n        var keyName = vimKeys[code]['name'];\n        if (ev.shiftKey) {\n            if (keyName == keyName.toUpperCase()) {\n                keyName = 'shift_' + keyName;\n            } else {\n                keyName = keyName.toUpperCase();\n            }\n        }\n        this._log(vimKeys[code][keyName] + suffix);\n        if (vimKeys[code][keyName]) {\n            //record\n            if (vimKeys[code]['record']) {\n                this.recordText();\n            }\n            eval(prefix + vimKeys[code][keyName] + suffix);\n            //init number\n            this.initNumber();\n        }\n    }\n}\n\nexports.class = function (name, fn) {\n    if (!name) {\n        throw new Error('first param is required');\n    }\n    if (typeof fn !== 'function') {\n        throw new Error('second param must be a function');\n    }\n    this.classes[name] = fn;\n}\n\nexports.createClass = function(name, arg) {\n    var fn = this.classes[name];\n    if (typeof fn !== 'function') {\n        throw new Error('class '+name+' not define');\n    }\n    return new fn(arg);\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/instance/app/app.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * Created by top on 15-9-6.\n */\n\nmodule.exports = {\n\n    /**\n     * whether to print debut messages\n     */\n    debug: true,\n\n    /**\n     * how to show msg from vim app\n     * @param msg\n     * @param code\n     */\n    showMsg: function(msg, code) {\n        alert(msg);\n    },\n\n    /**\n     * key codes white list of vim,\n     * they are effective in general and visual mode\n     */\n    key_code_white_list: [9, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123]\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * Created by top on 15-9-6.\n */\n\nexports.ready = function(router){\n\n    //---------------------------\n    //system feature keys:\n    //---------------------------\n\n    router.code(35, 'End').action('End', 'moveToCurrentLineTail');\n    router.code(36, 'Home').action('Home', 'moveToCurrentLineHead');\n    router.code(37, 'Left').action('Left', 'selectPrevCharacter');\n    router.code(38, 'Up').action('Up', 'selectPrevLine');\n    router.code(39, 'Right').action('Right', 'selectNextCharacter');\n    router.code(40, 'Down').action('Down', 'selectNextLine');\n    router.code(45, 'Insert').action('Insert', 'insert');\n    router.code(46, 'Delete').action('Delete', 'delCharAfter').record(true);\n\n    //---------------------------\n    //vim feature keys:\n    //---------------------------\n\n    //0:move to current line head\n    router.code(48, '0').action(0, 'moveToCurrentLineHead');\n    //&:move to current line tail\n    router.code(52, '4').action('shift_4', 'moveToCurrentLineTail');\n    //append\n    router.code(65, 'a').action('a', 'append').action('A', 'appendLineTail');\n    //insert\n    router.code(73, 'i').action('i', 'insert').action('I', 'insertLineHead');\n    //new line\n    router.code(79, 'o').action('o', 'appendNewLine').action('O', 'insertNewLine').record(true);\n    //replace\n    router.code(82, 'r').action('r', 'replaceChar');\n    //down\n    router.code(13, 'enter').action('enter', 'selectNextLine');\n    router.code(74, 'j').action('j', 'selectNextLine');\n    //up\n    router.code(75, 'k').action('k', 'selectPrevLine');\n    //left\n    router.code(72, 'h').action('h', 'selectPrevCharacter');\n    //right\n    router.code(76, 'l').action('l', 'selectNextCharacter');\n    //paste\n    router.code(80, 'p').action('p', 'pasteAfter').action('P', 'pasteBefore').record(true);\n    //back\n    router.code(85, 'u').action('u', 'backToHistory');\n    //copy char\n    router.code(89, 'y').action('y', 'copyChar').mode('visual_mode');\n    router.code('89_89', 'yy').action('yy', 'copyCurrentLine');\n    //v\n    router.code(86, 'v').action('v', 'switchModeToVisual').action('V', 'switchModeToVisual');\n    //delete character\n    router.code(88, 'x').action('x', 'delCharAfter').action('X', 'delCharBefore').record(true);\n    //delete selected char in visual mode\n    router.code(68, 'd').action('d', 'delCharAfter').mode('visual_mode').record(true);\n    //delete line\n    router.code('68_68', 'dd').action('dd', 'delCurrLine').record(true);\n    //G\n    router.code(71, 'g').action('G', 'moveToLastLine');\n    //gg\n    router.code('71_71', 'gg').action('gg', 'moveToFirstLine');\n    //move to next word\n    router.code(87, 'w').action('w', 'moveToNextWord').action('W', 'moveToNextWord');\n    //copy word\n    router.code('89_87', 'yw').action('yw', 'copyWord');\n    //delete one word\n    router.code('68_87', 'dw').action('dw', 'deleteWord').record(true);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/routes.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * Created by top on 15-9-6.\n */\nconst GENERAL = 'general_mode';\nconst VISUAL  = 'visual_mode';\n\nvar _ = require('./util/helper.js');\nvar filter = require('./filter.js');\nvar App;\n\nexports.listen = function(app) {\n    App = app;\n    var boxes = window.document.querySelectorAll('input, textarea');\n    App.boxes = boxes;\n    for (var i = 0; i<boxes.length;i++) {\n        var box = boxes[i];\n        box.onfocus = onFocus;\n        box.onclick = onClick;\n        box.onkeydown = onKeyDown;\n    }\n    App._on('reset_cursor_position', function (e) {\n        if (App.vim.isMode(GENERAL) || App.vim.isMode(VISUAL)) {\n            App.vim.resetCursorByMouse();\n        }\n    });\n    App._on('input', function(ev, replaced){\n        var code = getCode(ev);\n        App._log('mode:'+App.vim.currentMode);\n        if (replaced) {\n            App.recordText();\n            return;\n        }\n        if (filter.code(App, code)) {\n            var unionCode = App.isUnionCode(code, -1);\n            var vimKeys = App.router.getKeys();\n            if (unionCode && vimKeys[unionCode]) {\n                code = unionCode;\n            }\n            App._log('key code:'+code);\n            var num = App.numberManager(code);\n            App.parseRoute(code, ev, num);\n        }\n    });\n}\n\nfunction onFocus() {\n    App.currentEle = this;\n    App.textUtil.setEle(this);\n    App.vim.setTextUtil(App.textUtil);\n    App.vim.resetVim();\n    App.controller.setVim(App.vim);\n    App.controller.setTextUtil(App.textUtil);\n    App.initNumber();\n}\n\nfunction onClick(e) {\n    var ev = e || event || window.event;\n    App._fire('reset_cursor_position', ev);\n}\n\nfunction onKeyDown(e) {\n    var replaced = false;\n    var ev = getEvent(e);\n    var code = getCode(e);\n    if (_.indexOf(App.key_code_white_list, code) !== -1) {\n        return;\n    }\n    if (App.vim.isMode(GENERAL) || App.vim.isMode(VISUAL)) {\n        if (App.vim.replaceRequest) {\n            replaced = true;\n            App.vim.replaceRequest = false;\n            setTimeout(function () {\n                App.vim.selectPrevCharacter();\n            }, 50);\n        } else {\n            if (ev.preventDefault) {\n                ev.preventDefault();\n            } else {\n                ev.returnValue = false;\n            }\n        }\n    } else {\n        if(code != 27){\n            var p = App.textUtil.getCursorPosition();\n            App.recordText(undefined, (p-1>=0 ? p-1:p));\n        }\n    }\n    App._fire('input', ev, replaced);\n}\n\nfunction getEvent(e) {\n    return e || event || window.event;\n}\n\nfunction getCode(ev) {\n    var e = getEvent(ev);\n    return e.keyCode || e.which || e.charCode;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/bind.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * Created by top on 15-9-6.\n */\nconst GENERAL = 'general_mode';\nconst COMMAND = 'command_mode';\nconst EDIT    = 'edit_mode';\nconst VISUAL  = 'visual_mode';\n\nexports.code = function (App, code) {\n    var passed = true;\n    if (code == 229) {\n        if (App.vim.isMode(GENERAL) || App.vim.isMode(VISUAL)) {\n            passed = false;\n            var msg = 'Execution failure! Please use the vim instructions in the English input method.';\n            App._log(msg);\n            App.config.showMsg(msg);\n        }\n    }\n    return passed;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/filter.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * current element\n * @type {undefined}\n */\nexports.currentEle = undefined;\n\n/**\n * elements of vim.js app\n * @type {undefined}\n */\nexports.boxes = undefined;\n\n/**\n * app config\n * @type {undefined}\n */\nexports.config = undefined;\n\n/**\n * Router instance\n * @type {undefined}\n */\nexports.router = undefined;\n\n/**\n * Vim instance\n * @type {undefined}\n */\nexports.vim = undefined;\n\n/**\n * TextUtil instance\n * @type {undefined}\n */\nexports.textUtil = undefined;\n\n/**\n * clipboard of app\n * @type {undefined}\n */\nexports.clipboard = undefined;\n\n/**\n * app do list\n * @type {Array}\n */\nexports.doList = [];\n\n/**\n * app do list deep\n * @type {number}\n */\nexports.doListDeep = 100;\n\n/**\n * previous key code\n * @type {undefined}\n */\nexports.prevCode = undefined;\n\nexports.prevCodeTime = 0;\n\n/**\n * numerical for vim command\n * @type {string}\n * @private\n */\nexports._number = '';\n\n/**\n * key codes white list of vim\n * @type {Array}\n */\nexports.key_code_white_list = [];\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/instance/app/init.js\n ** module id = 12\n ** module chunks = 0\n **/"],"sourceRoot":""}